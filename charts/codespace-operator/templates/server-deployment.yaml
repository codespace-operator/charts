{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "codespace-operator.server.name" . }}
  labels:
{{ include "codespace-operator.commonLabels" . | indent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
{{ include "codespace-operator.selectorLabels" (dict "name" (printf "%s-server" (include "codespace-operator.name" .)) "root" .) | indent 6 }}
  template:
    metadata:
      labels:
{{ include "codespace-operator.server.podLabels" . | indent 8 }}
      {{- $annotations := include "codespace-operator.server.podAnnotations" . }}
      {{- if $annotations }}
      annotations:
{{ $annotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ if .Values.server.useManagerServiceAccount }}{{ include "codespace-operator.serviceAccountName" . }}{{ else }}{{ include "codespace-operator.server.serviceAccountName" . }}{{ end }}
      {{- with .Values.server.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: server
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.service.targetPort }}
          env:
            - name: CODESPACE_SERVER_CLUSTER_SCOPE
              value: "{{ .Values.server.clusterScope }}"
            - name: CODESPACE_SERVER_PORT
              value: "{{ .Values.server.service.targetPort }}"
            - name: CODESPACE_SERVER_ALLOW_ORIGIN
              value: "{{ .Values.server.env.allowOrigin }}"
            - name: CODESPACE_SERVER_LOG_LEVEL
              value: "{{ .Values.server.logLevel | default "info" }}"
            - name: CODESPACE_SERVER_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace-operator.server.name" . }}-auth
                  key: jwt-secret
            {{- if .Values.server.bootstrapLoginAllowed }}
            - name: CODESPACE_SERVER_BOOTSTRAP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace-operator.server.name" . }}-auth
                  key: bootstrap-user
            - name: CODESPACE_SERVER_BOOTSTRAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace-operator.server.name" . }}-auth
                  key: bootstrap-password
            {{- end }}
            - name: CODESPACE_SERVER_RBAC_MODEL_PATH
              value: "/etc/codespace-operator/rbac/model.conf"
            - name: CODESPACE_SERVER_RBAC_POLICY_PATH
              value: "/etc/codespace-operator/rbac/policy.csv"
            - name: CODESPACE_SERVER_OIDC_ISSUER_URL
              value: "{{ .Values.server.oidc.issuerURL }}"
            - name: CODESPACE_SERVER_OIDC_CLIENT_ID
              value: "{{ .Values.server.oidc.clientID }}"
            - name: CODESPACE_SERVER_OIDC_INSECURE_SKIP_VERIFY
              value: "{{ .Values.server.oidc.insecureSkipVerify }}"
            - name: CODESPACE_SERVER_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace-operator.server.name" . }}-auth
                  key: oidc-client-secret
            - name: CODESPACE_SERVER_OIDC_REDIRECT_URL
              value: "{{ .Values.server.oidc.redirectURL }}"
            - name: CODESPACE_SERVER_OIDC_SCOPES
              value: "{{ join "," .Values.server.oidc.scopes }}"
            - name: CODESPACE_SERVER_ENABLE_LOCAL_LOGIN
              value: "{{ .Values.server.auth.enableLocalLogin }}"
            - name: CODESPACE_SERVER_ALLOW_TOKEN_PARAM
              value: "{{ .Values.server.auth.allowTokenParam }}"
            - name: CODESPACE_SERVER_SESSION_TTL_MINUTES
              value: "{{ .Values.server.session.ttlMinutes }}"
            - name: CODESPACE_SERVER_SESSION_COOKIE_NAME
              value: "{{ .Values.server.session.cookieName }}"
            - name: CODESPACE_SERVER_LOCAL_USERS_PATH
              value: /etc/codespace-operator/local-users.yaml
            # Downward API
            - name: POD_NAME
              valueFrom: { fieldRef: { fieldPath: metadata.name } }
            - name: POD_UID
              valueFrom: { fieldRef: { fieldPath: metadata.uid } }
            - name: POD_NAMESPACE
              valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
            - name: POD_IP
              valueFrom: { fieldRef: { fieldPath: status.podIP } }
            - name: NODE_NAME
              valueFrom: { fieldRef: { fieldPath: spec.nodeName } }
          volumeMounts:
            - name: rbac
              mountPath: /etc/codespace-operator/rbac
              readOnly: true
            - name: local-users-yaml
              mountPath: /etc/codespace-operator/local-users.yaml
              subPath: local-users.yaml
              readOnly: true
          readinessProbe:
            httpGet:
              path: {{ .Values.server.probes.readinessPath | default "/readyz" }}
              port: {{ .Values.server.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: {{ .Values.server.probes.livenessPath | default "/healthz" }}
              port: {{ .Values.server.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          {{- with .Values.server.resources }}
          resources:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.server.containerSecurityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
      volumes:
        - name: rbac
          configMap:
            name: codespace-rbac-cm
        - name: local-users-yaml
          secret:
            secretName: {{ include "codespace-operator.server.name" . }}-local-users
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}


