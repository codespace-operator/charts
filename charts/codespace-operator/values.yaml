nameOverride: ""
fullnameOverride: ""
podLabels: {}
podAnnotations: {}

operator:
  enabled: true
  podLabels: {}
    # component: operator
    # tier: control-plane

  podAnnotations: {}
    # operator-specific annotations
  rbac:
    create: true

  image:
    repository: ghcr.io/codespace-operator/codespace-operator
    tag: "{{chart.AppVersion}}"
    pullPolicy: IfNotPresent

  replicaCount: 1

  serviceAccount:
    create: true
    name: ""

  webhook:
    enabled: false
    certPath: ""
    certName: tls.crt
    certKey: tls.key

  metrics:
    name: ""
    enabled: true
    secure: true
    bindAddress: :8443
    service:
      type: ClusterIP
      annotations: {}
      port: 8443
      targetPort: 443
    serviceMonitor:
      enabled: false
      namespace: ""
      interval: 30s
      scrapeTimeout: 10s
      labels: {}


  enableHTTP2: false

  resources:
    limits: {}
    requests:
      cpu: 100m
      memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}

  extraArgs: []


  securityContext: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  ingressClass:
    enabled: false
    name: codespace-operator
    controller: k8s.io/ingress-controller/codespace-operator

server:
  enabled: true
  podLabels: {}
  podAnnotations: {}

  clusterScope: false

  oidc:
    insecureSkipVerify: false
    issuerURL: "" # e.g. https://dev-123456.okta.com
    clientID: ""
    clientSecret: ""
    redirectURL: "" # e.g. https://your.host/auth/callback
    scopes: [openid, profile, email]

  session:
    ttlMinutes: 60
    cookieName: ""  # optional override

  route:
    enabled: false
    annotations: {}
    tls:
      termination: edge

  logLevel: info

  auth:
    allowTokenParam: false  # allow ?access_token=... (NOT recommended)
    enableLocalLogin: true
    # IMPORTANT: set a stable secret in prod; chart generates one if empty
    jwtSecret: "" # set for stable upgrades
    bootstrapLoginAllowed: false
    bootstrapUser: admin # single local admin
    bootstrapPassword: admin # chart generates random if empty
  image:
    repository: ghcr.io/codespace-operator/codespace-server
    tag: "{{chart.AppVersion}}"
    pullPolicy: IfNotPresent

  env:
    # Same-origin by default; set to http://localhost:5173 only for local dev
    allowOrigin: "*"
  service:
    type: ClusterIP
    annotations: {}
    name: "" # auto generate otherwise
    port: 8443
    targetPort: 8443 # container's port

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: console.codespace.test
        path: /
    tls: []

  probes:
    readinessPath: /readyz
    livenessPath: /healthz

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 500m
      memory: 256Mi

  securityContext:
    runAsUser: 1001
    runAsNonRoot: true
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop: [ALL]

  nodeSelector: {}
  tolerations: []
  affinity: {}
  useManagerServiceAccount: false

  serviceAccount:
    create: true
    name: ""

  rbac:
    create: true

  networkPolicy:
    enabled: true
    allowIngressFromSameNamespace: true
    egressToKubeAPIServer: true

  # Password is a hash using openssl passwd -6 "string"
  configs:
    localUsers: |
      # to generate mkpasswd -m argon2id 'password' htpasswd from package `apache2-utils`
      # htpasswd -nbBC 12 user 'password' | cut -d: -f2

      # assign roles by using policy.csv
      # i.e. if user is testuser then:
      # p, local:testuser, *, *, *, *
      users:
        - username: user
          passwordHash: $2y$12$nrT3P8qWNMR0ODZLvnn10eP/lgj2oSnh2vofHh4MzkoV9eUaz/WFG
          email: user@localhost
