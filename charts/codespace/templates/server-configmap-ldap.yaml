{{- if and .Values.server.enabled .Values.server.auth.providers.ldap.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "codespace.server.auth.providers.ldap.configMapName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "codespace.server.labels" . | nindent 4 }}
data:
  # This file is consumed directly by the common/auth package (auth.providers.ldapConfig).
  ldap-config.yaml: |
    enabled: true
    # Connection
    url: {{ .Values.server.auth.providers.ldap.url | quote }}
    startTLS: {{ .Values.server.auth.providers.ldap.startTLS | default false }}
    insecureSkipVerify: {{ .Values.server.auth.providers.ldap.insecureSkipVerify | default false }}

    # Bind (service account) - omit bindPassword here; keep it in Secret
    bindDN: {{ .Values.server.auth.providers.ldap.bindDN | quote }}

    # User lookup
    userDNTemplate: {{ .Values.server.auth.providers.ldap.userDNTemplate | quote }}
    userBaseDN: {{ .Values.server.auth.providers.ldap.userBaseDN | quote }}
    userFilter: {{ .Values.server.auth.providers.ldap.userFilter | quote }}
    usernameAttr: {{ .Values.server.auth.providers.ldap.usernameAttr | quote }}
    emailAttr: {{ .Values.server.auth.providers.ldap.emailAttr | quote }}
    displayNameAttr: {{ .Values.server.auth.providers.ldap.displayNameAttr | quote }}
    toLowerUsername: {{ .Values.server.auth.providers.ldap.toLowerUsername | default true }}

    # Group lookup
    groupBaseDN: {{ .Values.server.auth.providers.ldap.groupBaseDN | quote }}
    groupFilter: {{ .Values.server.auth.providers.ldap.groupFilter | quote }}
    groupAttr: {{ .Values.server.auth.providers.ldap.groupAttr | quote }}

    # Role mapping (map[string][]string)
    roleMapping:
{{- range $k, $v := .Values.server.auth.providers.ldap.roleMapping }}
      "{{ $k }}": {{ toJson $v }}
{{- end }}

    # Default roles ([]string)
    defaultRoles:
{{- range .Values.server.auth.providers.ldap.defaultRoles }}
      - {{ . | quote }}
{{- end }}
{{- end }}
