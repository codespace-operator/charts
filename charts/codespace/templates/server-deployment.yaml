{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "codespace.server.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "codespace.server.labels" . | nindent 4 }}
  {{- $annotations := include "codespace.server.annotations" . }}
  {{- if $annotations }}
  annotations:
    {{- $annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "codespace.selectorLabels" (dict "name" (printf "%s-server" (include "codespace.name" .)) "root" .) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "codespace.server.podLabels" . | nindent 8 }}
      annotations:
        # RBAC can be hotswapped without restarts
        checksum/secret: {{ include (print $.Template.BasePath "/server-secret.yaml") . | sha256sum }}
        checksum/auth: {{ include (print $.Template.BasePath "/server-configmap-auth.yaml") . | sha256sum }}
        {{- if .Values.server.auth.providers.local.enabled }}
        checksum/users: {{ include (print $.Template.BasePath "/server-users-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- $podAnnotations := include "codespace.server.podAnnotations" . }}
        {{- if $podAnnotations }}
        {{- $podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ if .Values.server.useManagerServiceAccount }}{{ include "codespace.serviceAccountName" . }}{{ else }}{{ include "codespace.server.serviceAccountName" . }}{{ end }}
      {{- with .Values.server.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          image: {{ include "codespace.server.image" . }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.service.targetPort }}
              protocol: TCP
          env:
            # ================= CORE =================
            - name: CODESPACE_SERVER_CLUSTER_SCOPE
              value: {{ .Values.server.clusterScope | quote }}
            - name: CODESPACE_SERVER_PORT
              value: {{ .Values.server.service.targetPort | quote }}
            - name: CODESPACE_SERVER_LOG_LEVEL
              value: {{ .Values.server.logLevel | quote }}
            - name: CODESPACE_SERVER_ALLOW_ORIGIN
              value: {{ .Values.server.env.allowOrigin | quote }}
            - name: CODESPACE_SERVER_AUTH_FILE
              value: {{ .Values.server.auth.file | default "/etc/codespace-operator/auth/auth.yaml" | quote }}
            # ================ MANAGER (manager.*) ================
            - name: CODESPACE_SERVER_AUTH_MANAGER_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace.server.name" . }}-auth
                  key: jwt-secret
            {{- if .Values.server.auth.manager.session_cookie_name }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_SESSION_COOKIE_NAME
              value: {{ .Values.server.auth.manager.session_cookie_name | quote }}
            {{- end }}
            {{- if .Values.server.auth.manager.session_ttl }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_SESSION_TTL
              value: {{ .Values.server.auth.manager.session_ttl | quote }}
            {{- end }}
            {{- if .Values.server.auth.manager.same_site }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_SAME_SITE
              value: {{ .Values.server.auth.manager.same_site | quote }}
            {{- end }}
            {{- if .Values.server.auth.manager.absolute_session_max }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_ABSOLUTE_SESSION_MAX
              value: {{ .Values.server.auth.manager.absolute_session_max | quote }}
            {{- end }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_ALLOW_TOKEN_PARAM
              value: {{ .Values.server.auth.manager.allow_token_param | default false | quote }}
            {{- if .Values.server.auth.manager.auth_path }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_AUTH_PATH
              value: {{ .Values.server.auth.manager.auth_path | quote }}
            {{- end }}
            {{- if .Values.server.auth.manager.auth_logout_path }}
            - name: CODESPACE_SERVER_AUTH_MANAGER_AUTH_LOGOUT_PATH
              value: {{ .Values.server.auth.manager.auth_logout_path | quote }}
            {{- end }}
            # ================ LOCAL (providers.local.*) ==========
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LOCAL_ENABLED
              value: {{ .Values.server.auth.providers.local.enabled | default false | quote }}
            {{- if .Values.server.auth.providers.local.enabled }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LOCAL_USERS_PATH
              value: {{ .Values.server.auth.providers.local.users_path | default "/etc/codespace-operator/local-users.yaml" | quote }}
            {{- end }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LOCAL_BOOTSTRAP_ALLOWED
              value: {{ .Values.server.auth.providers.local.bootstrap.allowed | default false | quote }}
            {{- if .Values.server.auth.providers.local.bootstrap.allowed }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LOCAL_BOOTSTRAP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace.server.name" . }}-auth
                  key: bootstrap-user
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LOCAL_BOOTSTRAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace.server.name" . }}-auth
                  key: bootstrap-password
            {{- end }}
            # ================== OIDC (providers.oidc.*) ==================
            {{- if .Values.server.auth.providers.oidc.enabled }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_ENABLED
              value: "true"
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_ISSUER_URL
              value: {{ .Values.server.auth.providers.oidc.issuer_url | quote }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_CLIENT_ID
              value: {{ .Values.server.auth.providers.oidc.client_id | quote }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace.server.name" . }}-auth
                  key: oidc-client-secret
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_REDIRECT_URL
              value: {{ .Values.server.auth.providers.oidc.redirect_url | quote }}
            # (scopes are already in the file; omit ENV unless you need to override)
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_OIDC_INSECURE_SKIP_VERIFY
              value: {{ .Values.server.auth.providers.oidc.insecure_skip_verify | default false | quote }}
            {{- end }}
            # ================== LDAP (providers.ldap.*) ==================
            {{- if .Values.server.auth.providers.ldap.enabled }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_ENABLED
              value: "true"
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_URL
              value: {{ .Values.server.auth.providers.ldap.url | quote }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_START_TLS
              value: {{ .Values.server.auth.providers.ldap.start_tls | default false | quote }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_INSECURE_SKIP_VERIFY
              value: {{ .Values.server.auth.providers.ldap.insecure_skip_verify | default false | quote }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_BIND_DN
              value: {{ .Values.server.auth.providers.ldap.bind_dn | quote }}
            {{- if .Values.server.auth.providers.ldap.bind_password }}
            - name: CODESPACE_SERVER_AUTH_PROVIDERS_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "codespace.server.name" . }}-auth
                  key: ldap-bind-password
            {{- end }}
            {{- end }}

            # ================= RBAC paths ================
            - name: CODESPACE_SERVER_RBAC_MODEL_PATH
              value: /etc/codespace-operator/rbac/model.conf
            - name: CODESPACE_SERVER_RBAC_POLICY_PATH
              value: /etc/codespace-operator/rbac/policy.csv

            {{- if .Values.server.auth.providers.local.enabled }}
            - name: CODESPACE_SERVER_PROVIDERS_LOCAL_USERS_PATH
              value: /etc/codespace-operator/local-users.yaml
            {{- end }}

            # ============ Downward API ============
            - name: POD_NAME
              valueFrom: { fieldRef: { fieldPath: metadata.name } }
            - name: POD_UID
              valueFrom: { fieldRef: { fieldPath: metadata.uid } }
            - name: POD_NAMESPACE
              valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
            - name: POD_IP
              valueFrom: { fieldRef: { fieldPath: status.podIP } }
            - name: NODE_NAME
              valueFrom: { fieldRef: { fieldPath: spec.nodeName } }

          volumeMounts:
            - name: auth-config
              mountPath: /etc/codespace-operator/auth
              readOnly: true
            - name: rbac-config
              mountPath: /etc/codespace-operator/rbac
              readOnly: true
            {{- if .Values.server.auth.providers.local.enabled }}
            - name: local-users
              mountPath: /etc/codespace-operator/local-users.yaml
              subPath: local-users.yaml
              readOnly: true
            {{- end }}
          # Health checks
          readinessProbe:
            httpGet:
              path: {{ .Values.server.probes.readinessPath }}
              port: {{ .Values.server.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1

          livenessProbe:
            httpGet:
              path: {{ .Values.server.probes.livenessPath }}
              port: {{ .Values.server.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1

          {{- with .Values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          
          {{- with .Values.server.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      # Volume definitions
      volumes:
        - name: auth-config
          configMap:
            name: {{ include "codespace.server.name" . }}-auth
            defaultMode: 0644
        - name: rbac-config
          configMap:
            name: {{ include "codespace.server.rbac.configMapName" . }}
            defaultMode: 0644
        {{- if .Values.server.auth.providers.local.enabled }}
        - name: local-users
          secret:
            secretName: {{ include "codespace.server.name" . }}-local-users
            defaultMode: 0600
        {{- end }}


      # Scheduling
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}